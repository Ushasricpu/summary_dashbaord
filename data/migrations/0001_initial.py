# Generated by Django 3.2.4 on 2023-08-17 05:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nodes', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='WisunNodesDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('latency', models.FloatField(default=None, null=True)),
                ('rssi', models.FloatField(default=None, null=True)),
                ('data_rate', models.FloatField(default=None, null=True)),
                ('mac_address', models.TextField(default=None, null=True)),
                ('rsl_in', models.FloatField(default=None, null=True)),
                ('etx', models.FloatField(default=None, null=True)),
                ('rpl_rank', models.FloatField(default=None, null=True)),
                ('mac_tx_failed_count', models.FloatField(default=None, null=True)),
                ('mac_tx_count', models.FloatField(default=None, null=True)),
                ('neighbour', models.TextField(default=None, null=True)),
                ('packet_size', models.IntegerField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WisunNodesData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('latency', models.FloatField(default=None, null=True)),
                ('rssi', models.FloatField(default=None, null=True)),
                ('data_rate', models.FloatField(default=None, null=True)),
                ('mac_address', models.TextField(default=None, null=True)),
                ('rsl_in', models.FloatField(default=None, null=True)),
                ('etx', models.FloatField(default=None, null=True)),
                ('rpl_rank', models.FloatField(default=None, null=True)),
                ('mac_tx_failed_count', models.FloatField(default=None, null=True)),
                ('mac_tx_count', models.FloatField(default=None, null=True)),
                ('neighbour', models.TextField(default=None, null=True)),
                ('packet_size', models.IntegerField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('solar_radiation', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('wind_direction', models.FloatField(default=None, null=True)),
                ('wind_speed', models.FloatField(default=None, null=True)),
                ('gust_speed', models.FloatField(default=None, null=True)),
                ('dew_point', models.FloatField(default=None, null=True)),
                ('battery_dc_voltage', models.FloatField(default=None, null=True)),
                ('rain', models.FloatField(default=None, null=True)),
                ('pressure', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('solar_radiation', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('wind_direction', models.FloatField(default=None, null=True)),
                ('wind_speed', models.FloatField(default=None, null=True)),
                ('gust_speed', models.FloatField(default=None, null=True)),
                ('dew_point', models.FloatField(default=None, null=True)),
                ('battery_dc_voltage', models.FloatField(default=None, null=True)),
                ('rain', models.FloatField(default=None, null=True)),
                ('pressure', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WaterFlowDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('flowrate', models.FloatField(default=None, null=True)),
                ('total_flow', models.FloatField(default=None, null=True)),
                ('pressure', models.FloatField(default=None, null=True)),
                ('pressure_voltage', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WaterFlowData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('flowrate', models.FloatField(default=None, null=True)),
                ('total_flow', models.FloatField(default=None, null=True)),
                ('pressure', models.FloatField(default=None, null=True)),
                ('pressure_voltage', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WaterDistributionDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('tds_voltage', models.FloatField(default=None, null=True)),
                ('uncompensated_tds_value', models.FloatField(default=None, null=True)),
                ('compensated_tds_value', models.FloatField(default=None, null=True)),
                ('water_level', models.FloatField(default=None, null=True)),
                ('ph', models.FloatField(default=None, null=True)),
                ('turbidity', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='WaterDistributionData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('temperature', models.FloatField(null=True)),
                ('tds_voltage', models.FloatField(null=True)),
                ('uncompensated_tds_value', models.FloatField(null=True)),
                ('compensated_tds_value', models.FloatField(null=True)),
                ('water_level', models.FloatField(null=True)),
                ('ph', models.FloatField(null=True)),
                ('turbidity', models.FloatField(null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SolarDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eac_today', models.FloatField(null=True)),
                ('eac_total', models.FloatField(null=True)),
                ('active_power', models.FloatField(null=True)),
                ('voltage_rs', models.FloatField(null=True)),
                ('voltage_st', models.FloatField(null=True)),
                ('voltage_tr', models.FloatField(null=True)),
                ('frequency', models.FloatField(null=True)),
                ('power_factor', models.FloatField(null=True)),
                ('voltage1', models.FloatField(null=True)),
                ('current1', models.FloatField(null=True)),
                ('power1', models.FloatField(null=True)),
                ('voltage2', models.FloatField(null=True)),
                ('current2', models.FloatField(null=True)),
                ('power2', models.FloatField(null=True)),
                ('voltage3', models.FloatField(null=True)),
                ('current3', models.FloatField(null=True)),
                ('power3', models.FloatField(null=True)),
                ('pv1_voltage', models.FloatField(null=True)),
                ('pv1_current', models.FloatField(null=True)),
                ('pv1_power', models.FloatField(null=True)),
                ('pv2_voltage', models.FloatField(null=True)),
                ('pv2_current', models.FloatField(null=True)),
                ('pv2_power', models.FloatField(null=True)),
                ('pv3_voltage', models.FloatField(null=True)),
                ('pv3_current', models.FloatField(null=True)),
                ('pv3_power', models.FloatField(null=True)),
                ('pv4_voltage', models.FloatField(null=True)),
                ('pv4_current', models.FloatField(null=True)),
                ('pv4_power', models.FloatField(null=True)),
                ('pv5_voltage', models.FloatField(null=True)),
                ('pv5_current', models.FloatField(null=True)),
                ('pv5_power', models.FloatField(null=True)),
                ('pv6_voltage', models.FloatField(null=True)),
                ('pv6_current', models.FloatField(null=True)),
                ('pv6_power', models.FloatField(null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SolarData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('eac_today', models.FloatField(null=True)),
                ('eac_total', models.FloatField(null=True)),
                ('active_power', models.FloatField(null=True)),
                ('voltage_rs', models.FloatField(null=True)),
                ('voltage_st', models.FloatField(null=True)),
                ('voltage_tr', models.FloatField(null=True)),
                ('frequency', models.FloatField(null=True)),
                ('power_factor', models.FloatField(null=True)),
                ('voltage1', models.FloatField(null=True)),
                ('current1', models.FloatField(null=True)),
                ('power1', models.FloatField(null=True)),
                ('voltage2', models.FloatField(null=True)),
                ('current2', models.FloatField(null=True)),
                ('power2', models.FloatField(null=True)),
                ('voltage3', models.FloatField(null=True)),
                ('current3', models.FloatField(null=True)),
                ('power3', models.FloatField(null=True)),
                ('pv1_voltage', models.FloatField(null=True)),
                ('pv1_current', models.FloatField(null=True)),
                ('pv1_power', models.FloatField(null=True)),
                ('pv2_voltage', models.FloatField(null=True)),
                ('pv2_current', models.FloatField(null=True)),
                ('pv2_power', models.FloatField(null=True)),
                ('pv3_voltage', models.FloatField(null=True)),
                ('pv3_current', models.FloatField(null=True)),
                ('pv3_power', models.FloatField(null=True)),
                ('pv4_voltage', models.FloatField(null=True)),
                ('pv4_current', models.FloatField(null=True)),
                ('pv4_power', models.FloatField(null=True)),
                ('pv5_voltage', models.FloatField(null=True)),
                ('pv5_current', models.FloatField(null=True)),
                ('pv5_power', models.FloatField(null=True)),
                ('pv6_voltage', models.FloatField(null=True)),
                ('pv6_current', models.FloatField(null=True)),
                ('pv6_power', models.FloatField(null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomOCDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('occupancy1', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy2', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy3', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy4', models.CharField(default=None, max_length=30, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomOCData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('occupancy1', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy2', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy3', models.CharField(default=None, max_length=30, null=True)),
                ('occupancy4', models.CharField(default=None, max_length=30, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomEMDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('energy', models.FloatField(default=None, null=True)),
                ('power', models.FloatField(default=None, null=True)),
                ('current', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomEMData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('energy', models.FloatField(default=None, null=True)),
                ('power', models.FloatField(default=None, null=True)),
                ('current', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomAQDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('co2', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomAQData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('co2', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomACDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room_temp', models.FloatField(default=None, null=True)),
                ('temp_adjust', models.FloatField(default=None, null=True)),
                ('start_stop_status', models.FloatField(default=None, null=True)),
                ('alarm', models.FloatField(default=None, null=True)),
                ('malfunction_code', models.FloatField(default=None, null=True)),
                ('air_con_mode_status', models.FloatField(default=None, null=True)),
                ('air_flow_rate_status', models.FloatField(default=None, null=True)),
                ('filter_sign', models.FloatField(default=None, null=True)),
                ('gas_total_power', models.FloatField(default=None, null=True)),
                ('elec_total_power', models.FloatField(default=None, null=True)),
                ('air_direction_status', models.FloatField(default=None, null=True)),
                ('forced_thermo_off_status', models.FloatField(default=None, null=True)),
                ('energy_efficiency_status', models.FloatField(default=None, null=True)),
                ('compressor_status', models.FloatField(default=None, null=True)),
                ('indoor_fan_status', models.FloatField(default=None, null=True)),
                ('heater_status', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='SmartroomACData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('room_temp', models.FloatField(default=None, null=True)),
                ('temp_adjust', models.FloatField(default=None, null=True)),
                ('start_stop_status', models.FloatField(default=None, null=True)),
                ('alarm', models.FloatField(default=None, null=True)),
                ('malfunction_code', models.FloatField(default=None, null=True)),
                ('air_con_mode_status', models.FloatField(default=None, null=True)),
                ('air_flow_rate_status', models.FloatField(default=None, null=True)),
                ('filter_sign', models.FloatField(default=None, null=True)),
                ('gas_total_power', models.FloatField(default=None, null=True)),
                ('elec_total_power', models.FloatField(default=None, null=True)),
                ('air_direction_status', models.FloatField(default=None, null=True)),
                ('forced_thermo_off_status', models.FloatField(default=None, null=True)),
                ('energy_efficiency_status', models.FloatField(default=None, null=True)),
                ('compressor_status', models.FloatField(default=None, null=True)),
                ('indoor_fan_status', models.FloatField(default=None, null=True)),
                ('heater_status', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyMonitoringDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rssi', models.FloatField(default=None, null=True)),
                ('r_current', models.FloatField(default=None, null=True)),
                ('y_current', models.FloatField(default=None, null=True)),
                ('b_current', models.FloatField(default=None, null=True)),
                ('r_voltage', models.FloatField(default=None, null=True)),
                ('y_voltage', models.FloatField(default=None, null=True)),
                ('b_voltage', models.FloatField(default=None, null=True)),
                ('power_factor', models.FloatField(default=None, null=True)),
                ('frequency', models.FloatField(default=None, null=True)),
                ('apparent_power', models.FloatField(default=None, null=True)),
                ('real_power', models.FloatField(default=None, null=True)),
                ('energy_consumption', models.FloatField(default=None, null=True)),
                ('reactive_energy_lead', models.FloatField(default=None, null=True)),
                ('reactive_energy_lag', models.FloatField(default=None, null=True)),
                ('total_energy_consumption', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyMonitoringData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('rssi', models.FloatField(default=None, null=True)),
                ('r_current', models.FloatField(default=None, null=True)),
                ('y_current', models.FloatField(default=None, null=True)),
                ('b_current', models.FloatField(default=None, null=True)),
                ('r_voltage', models.FloatField(default=None, null=True)),
                ('y_voltage', models.FloatField(default=None, null=True)),
                ('b_voltage', models.FloatField(default=None, null=True)),
                ('power_factor', models.FloatField(default=None, null=True)),
                ('frequency', models.FloatField(default=None, null=True)),
                ('apparent_power', models.FloatField(default=None, null=True)),
                ('real_power', models.FloatField(default=None, null=True)),
                ('energy_consumption', models.FloatField(default=None, null=True)),
                ('reactive_energy_lead', models.FloatField(default=None, null=True)),
                ('reactive_energy_lag', models.FloatField(default=None, null=True)),
                ('total_energy_consumption', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='CrowdMonitoringDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_people_count', models.FloatField(default=None, null=True)),
                ('no_of_safe_distance_violations', models.FloatField(default=None, null=True)),
                ('no_of_mask_violations', models.FloatField(default=None, null=True)),
                ('timestamp_start', models.FloatField(default=None, null=True)),
                ('timestamp_end', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='CrowdMonitoringData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('current_people_count', models.FloatField(default=None, null=True)),
                ('no_of_safe_distance_violations', models.FloatField(default=None, null=True)),
                ('no_of_mask_violations', models.FloatField(default=None, null=True)),
                ('timestamp_start', models.FloatField(default=None, null=True)),
                ('timestamp_end', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='AirQualityDataLatest',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pm25', models.FloatField(default=None, null=True)),
                ('pm10', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('co', models.FloatField(default=None, null=True)),
                ('no2', models.FloatField(default=None, null=True)),
                ('nh3', models.FloatField(default=None, null=True)),
                ('aqi', models.FloatField(default=None, null=True)),
                ('aql', models.FloatField(default=None, null=True)),
                ('aqi_mp', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
        migrations.CreateModel(
            name='AirQualityData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('pm25', models.FloatField(default=None, null=True)),
                ('pm10', models.FloatField(default=None, null=True)),
                ('temperature', models.FloatField(default=None, null=True)),
                ('relative_humidity', models.FloatField(default=None, null=True)),
                ('co', models.FloatField(default=None, null=True)),
                ('no2', models.FloatField(default=None, null=True)),
                ('nh3', models.FloatField(default=None, null=True)),
                ('aqi', models.FloatField(default=None, null=True)),
                ('aql', models.FloatField(default=None, null=True)),
                ('aqi_mp', models.FloatField(default=None, null=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
        ),
    ]
